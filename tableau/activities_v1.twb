<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20194.19.1211.1636                               -->
<workbook source-build='2019.4.1 (20194.19.1211.1636)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts ignorable='true' predowngraded='true' />
    <Heatmap />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='w_mph' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='0.5'>
        <calculation class='tableau' formula='0.5' />
        <range max='1.0' min='0.0' />
      </column>
      <column caption='w_dist' datatype='real' name='[w_mph (copy)_1021261604058726402]' param-domain-type='range' role='measure' type='quantitative' value='0.5'>
        <calculation class='tableau' formula='0.5' />
        <range max='1.0' min='0.0' />
      </column>
    </datasource>
    <datasource caption='lat_long' inline='true' name='federated.1tai5100m47xhm1256ob21yk4hv3' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='lat_long' name='textscan.07ic1su1jxwqfx145dusb0ky1dgp'>
            <connection class='textscan' directory='/Users/david.herook/Desktop/Master/Personal Projects/strava/output' filename='activity_data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.07ic1su1jxwqfx145dusb0ky1dgp' name='activity_data.csv' table='[activity_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='real' name='lat' ordinal='1' />
            <column datatype='real' name='lng' ordinal='2' />
            <column datatype='integer' name='activity_id' ordinal='3' />
            <column datatype='datetime' name='date' ordinal='4' />
            <column datatype='string' name='name' ordinal='5' />
            <column datatype='real' name='distance' ordinal='6' />
            <column datatype='real' name='distance_miles' ordinal='7' />
            <column datatype='integer' name='moving_time' ordinal='8' />
            <column datatype='real' name='moving_time_hrs' ordinal='9' />
            <column datatype='string' name='city' ordinal='10' />
            <column datatype='real' name='mph' ordinal='11' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[activity_data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[activity_data.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lat]</local-name>
            <parent-name>[activity_data.csv]</parent-name>
            <remote-alias>lat</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lng</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lng]</local-name>
            <parent-name>[activity_data.csv]</parent-name>
            <remote-alias>lng</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>activity_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[activity_id]</local-name>
            <parent-name>[activity_data.csv]</parent-name>
            <remote-alias>activity_id</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>135</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[activity_data.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>4</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[activity_data.csv]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>distance</remote-name>
            <remote-type>5</remote-type>
            <local-name>[distance]</local-name>
            <parent-name>[activity_data.csv]</parent-name>
            <remote-alias>distance</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>distance_miles</remote-name>
            <remote-type>5</remote-type>
            <local-name>[distance_miles]</local-name>
            <parent-name>[activity_data.csv]</parent-name>
            <remote-alias>distance_miles</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>moving_time</remote-name>
            <remote-type>20</remote-type>
            <local-name>[moving_time]</local-name>
            <parent-name>[activity_data.csv]</parent-name>
            <remote-alias>moving_time</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>moving_time_hrs</remote-name>
            <remote-type>5</remote-type>
            <local-name>[moving_time_hrs]</local-name>
            <parent-name>[activity_data.csv]</parent-name>
            <remote-alias>moving_time_hrs</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[activity_data.csv]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>mph</remote-name>
            <remote-type>5</remote-type>
            <local-name>[mph]</local-name>
            <parent-name>[activity_data.csv]</parent-name>
            <remote-alias>mph</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.1tai5100m47xhm1256ob21yk4hv3].[min:Calculation_1021261604058820611:qk]&quot;' value='Composite' />
          <alias key='&quot;[federated.1tai5100m47xhm1256ob21yk4hv3].[min:distance_miles:qk]&quot;' value='Distance' />
          <alias key='&quot;[federated.1tai5100m47xhm1256ob21yk4hv3].[min:mph:qk]&quot;' value='Speed' />
        </aliases>
      </column>
      <column datatype='string' name='[Activity Id (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[activity_id]' new-bin='true'>
          <bin default-name='false' value='&quot;Runs&quot;'>
            <value>3176758153</value>
            <value>3268638221</value>
            <value>3291145648</value>
            <value>3299714223</value>
            <value>3304304159</value>
            <value>3313470676</value>
            <value>3338569587</value>
            <value>3343034201</value>
            <value>3351756619</value>
            <value>3595387977</value>
            <value>3610392158</value>
            <value>3620653433</value>
            <value>3625878969</value>
            <value>3636121989</value>
            <value>3649988553</value>
            <value>3655753421</value>
            <value>3661229510</value>
            <value>3661351570</value>
            <value>3666512435</value>
            <value>3671441872</value>
            <value>3680866765</value>
            <value>3713886784</value>
            <value>3718176242</value>
            <value>3724247588</value>
            <value>3729297687</value>
            <value>3738649150</value>
            <value>3746594320</value>
            <value>3753168405</value>
            <value>3772011540</value>
            <value>3792565545</value>
            <value>3802265412</value>
            <value>3823921337</value>
            <value>3830056771</value>
            <value>3835736481</value>
            <value>3840676463</value>
            <value>3855420864</value>
            <value>3860479596</value>
            <value>3870518471</value>
            <value>3875639154</value>
            <value>3884922777</value>
            <value>3894356190</value>
            <value>3899366653</value>
            <value>3899627609</value>
            <value>3909168250</value>
            <value>3928170027</value>
            <value>3938086860</value>
            <value>3951225990</value>
            <value>3961073274</value>
            <value>3970336366</value>
            <value>3979061775</value>
            <value>3998433153</value>
            <value>4020443344</value>
            <value>4036915665</value>
            <value>4593777504</value>
          </bin>
        </calculation>
      </column>
      <column caption='composite' datatype='real' name='[Calculation_1021261604058820611]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Parameters].[w_mph (copy)_1021261604058726402]*[Calculation_6837519832782139398] + [Parameters].[Parameter 1]*[distance_if_run_scaled (copy)_6837519832782659592])&#10;        /&#10;([Parameters].[w_mph (copy)_1021261604058726402]+[Parameters].[Parameter 1])&#10;&#10;*100' />
      </column>
      <column caption='is_run' datatype='boolean' name='[Calculation_6837519832723181568]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Activity Id (group)] = &apos;Runs&apos;' />
      </column>
      <column caption='distance_if_run' datatype='real' name='[Calculation_6837519832781099011]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [Calculation_6837519832723181568]&#10;then [distance_miles]&#10;else null &#10;end' />
      </column>
      <column caption='distance_if_run_scaled' datatype='real' name='[Calculation_6837519832782139398]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Calculation_6837519832781099011] - [distance_if_run (copy)_6837519832781496324])&#10;/&#10;([distance_if_run (copy) (copy)_6837519832781967365] - [distance_if_run (copy)_6837519832781496324])' />
      </column>
      <column aggregation='Sum' caption='F11' datatype='integer' name='[F1]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Activity Id' datatype='integer' name='[activity_id]' role='dimension' type='ordinal' />
      <column aggregation='None' caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Date' datatype='datetime' name='[date]' role='dimension' type='ordinal' />
      <column caption='Distance' datatype='real' name='[distance]' role='measure' type='quantitative' />
      <column caption='distance_if_run_max' datatype='real' name='[distance_if_run (copy) (copy)_6837519832781967365]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED :  max(if [Calculation_6837519832723181568]&#10;then [distance_miles]&#10;else null &#10;end)}' />
      </column>
      <column caption='distance_if_run_min' datatype='real' name='[distance_if_run (copy)_6837519832781496324]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED :  min(if [Calculation_6837519832723181568]&#10;then [distance_miles]&#10;else null &#10;end)}' />
      </column>
      <column caption='mph_if_run ' datatype='real' name='[distance_if_run (copy)_6837519832782659591]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [Calculation_6837519832723181568]&#10;then [mph]&#10;else null &#10;end' />
      </column>
      <column caption='mph_if_run_max' datatype='real' name='[distance_if_run_max (copy)_6837519832782659593]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED :  max(if [Calculation_6837519832723181568]&#10;then [mph]&#10;else null &#10;end)}' />
      </column>
      <column caption='mph_if_run_min' datatype='real' name='[distance_if_run_min (copy)_6837519832782659594]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED :  min(if [Calculation_6837519832723181568]&#10;then [mph]&#10;else null &#10;end)}' />
      </column>
      <column caption='mph_if_run_scaled ' datatype='real' name='[distance_if_run_scaled (copy)_6837519832782659592]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([distance_if_run (copy)_6837519832782659591] - [distance_if_run_min (copy)_6837519832782659594])&#10;/&#10;([distance_if_run_max (copy)_6837519832782659593] - [distance_if_run_min (copy)_6837519832782659594])' />
      </column>
      <column datatype='real' name='[distance_miles]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='Lat' datatype='real' name='[lat]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Lng' datatype='real' name='[lng]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Moving Time' datatype='integer' name='[moving_time]' role='measure' type='quantitative' />
      <column datatype='real' name='[mph]' role='measure' type='quantitative' />
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
      <column-instance column='[Calculation_1021261604058820611]' derivation='Min' name='[min:Calculation_1021261604058820611:qk]' pivot='key' type='quantitative' />
      <column-instance column='[distance_miles]' derivation='Min' name='[min:distance_miles:qk]' pivot='key' type='quantitative' />
      <column-instance column='[mph]' derivation='Min' name='[min:mph:qk]' pivot='key' type='quantitative' />
      <column-instance column='[activity_id]' derivation='None' name='[none:activity_id:ok]' pivot='key' type='ordinal' />
      <column-instance column='[date]' derivation='None' name='[none:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
      <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Activity Id,Date)' hidden='true' name='[Action (Activity Id,Date)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[activity_id]' />
          <groupfilter function='level-members' level='[date]' />
        </groupfilter>
      </group>
      <group caption='Action (Date,DAY(Date),Name)' hidden='true' name='[Action (Date,DAY(Date),Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[date]' />
          <groupfilter function='level-members' level='[tdy:date:ok]' />
          <groupfilter function='level-members' level='[name]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Activity Id,Date,Name)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:activity_id:ok]' />
          <groupfilter function='level-members' level='[none:date:ok]' />
          <groupfilter function='level-members' level='[none:name:nk]' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='false' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='/var/folders/v_/kx0fv_y94bl_ry3924kzl9sr0000gp/T/tableau-temp/TEMP_1olbjn31lc0akb1gl0paz1n833y5.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>0</ordinal>
              <family>activity_data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>27665</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>lat</remote-name>
              <remote-type>5</remote-type>
              <local-name>[lat]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>lat</remote-alias>
              <ordinal>1</ordinal>
              <family>activity_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>140365</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>lng</remote-name>
              <remote-type>5</remote-type>
              <local-name>[lng]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>lng</remote-alias>
              <ordinal>2</ordinal>
              <family>activity_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>183504</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>activity_id</remote-name>
              <remote-type>20</remote-type>
              <local-name>[activity_id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>activity_id</remote-alias>
              <ordinal>3</ordinal>
              <family>activity_data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>112</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>135</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>4</ordinal>
              <family>activity_data.csv</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>112</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>name</remote-alias>
              <ordinal>5</ordinal>
              <family>activity_data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>43</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>distance</remote-name>
              <remote-type>5</remote-type>
              <local-name>[distance]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>distance</remote-alias>
              <ordinal>6</ordinal>
              <family>activity_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>112</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>distance_miles</remote-name>
              <remote-type>5</remote-type>
              <local-name>[distance_miles]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>distance_miles</remote-alias>
              <ordinal>7</ordinal>
              <family>activity_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>112</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>moving_time</remote-name>
              <remote-type>20</remote-type>
              <local-name>[moving_time]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>moving_time</remote-alias>
              <ordinal>8</ordinal>
              <family>activity_data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>110</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>moving_time_hrs</remote-name>
              <remote-type>5</remote-type>
              <local-name>[moving_time_hrs]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>moving_time_hrs</remote-alias>
              <ordinal>9</ordinal>
              <family>activity_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>110</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>city</remote-name>
              <remote-type>129</remote-type>
              <local-name>[city]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>city</remote-alias>
              <ordinal>10</ordinal>
              <family>activity_data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>mph</remote-name>
              <remote-type>5</remote-type>
              <local-name>[mph]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>mph</remote-alias>
              <ordinal>11</ordinal>
              <family>activity_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>112</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>distance_miles_scaled</remote-name>
              <remote-type>5</remote-type>
              <local-name>[distance_miles_scaled]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>distance_miles_scaled</remote-alias>
              <ordinal>12</ordinal>
              <family>activity_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>112</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>moving_time_hrs_scaled</remote-name>
              <remote-type>5</remote-type>
              <local-name>[moving_time_hrs_scaled]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>moving_time_hrs_scaled</remote-alias>
              <ordinal>13</ordinal>
              <family>activity_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>110</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>mph_scaled</remote-name>
              <remote-type>5</remote-type>
              <local-name>[mph_scaled]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>mph_scaled</remote-alias>
              <ordinal>14</ordinal>
              <family>activity_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>112</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.460967' measure-ordering='alphabetic' measure-percentage='0.464684' parameter-percentage='0.0743494' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Blades&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pigeons&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;6pm in New York&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Houstatlantavegas&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Torrey’s&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Blade 7&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Morning Hike&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Carrera de noche&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Run (ew)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Blades 2&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pupusa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Blade 9&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Noice&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Golden, Flat Tire&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Toast&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;A Sniffly Ride&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lunch Ride&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Turia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Eun&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sunday&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Blade McWade&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Paddle&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Carrera de tarde&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Run: Part 2&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Early Sunday&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Solstice run&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Golden to Denver&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sunday Run&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Green Mountain&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Too cold&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brewery&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Quick&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Blade9&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Paddleboard&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Afternoon Hike&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lunch Run&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ugh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Elbert&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;South Ridge&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bugs were Swallowed&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Run&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Blade&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Meniscus Biscuits&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:activity_id:ok]' type='palette'>
            <map to='#499894'>
              <bucket>2475687225</bucket>
            </map>
            <map to='#499894'>
              <bucket>3441479512</bucket>
            </map>
            <map to='#499894'>
              <bucket>3661351570</bucket>
            </map>
            <map to='#499894'>
              <bucket>3855420864</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>1675153215</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>2362675783</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>3291145648</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>3610392158</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>3787171690</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>3961073274</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>2442782410</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>3338569587</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>3645106758</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>3830056771</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>3979061775</bucket>
            </map>
            <map to='#79706e'>
              <bucket>2694336007</bucket>
            </map>
            <map to='#79706e'>
              <bucket>3511706073</bucket>
            </map>
            <map to='#79706e'>
              <bucket>3713886784</bucket>
            </map>
            <map to='#79706e'>
              <bucket>3884922777</bucket>
            </map>
            <map to='#79706e'>
              <bucket>4036915665</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>2532743492</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>3462894302</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>3666512435</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>3860479596</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>4059062231</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>2452209826</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>3343034201</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>3649988553</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>3835736481</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>3176758153</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>3584977402</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>3753168405</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>3938086860</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>1738344106</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>2397003962</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>3299714223</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>3620653433</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>3792565545</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>3970336366</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>2791891576</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>3538204235</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>3738649150</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>3909168250</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>2455825141</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>3351756619</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>3655753421</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>3840676463</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>2750620827</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>3517428172</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>3718176242</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>3894356190</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>4593777504</bucket>
            </map>
            <map to='#d37295'>
              <bucket>2767821059</bucket>
            </map>
            <map to='#d37295'>
              <bucket>3522994210</bucket>
            </map>
            <map to='#d37295'>
              <bucket>3724247588</bucket>
            </map>
            <map to='#d37295'>
              <bucket>3899366653</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>2856318725</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>3569612626</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>3746594320</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>3928170027</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>3268638221</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>3595387977</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>3772011540</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>3951225990</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2651296384</bucket>
            </map>
            <map to='#e15759'>
              <bucket>3495067957</bucket>
            </map>
            <map to='#e15759'>
              <bucket>3671441872</bucket>
            </map>
            <map to='#e15759'>
              <bucket>3870518471</bucket>
            </map>
            <map to='#e15759'>
              <bucket>3998433153</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>2456275527</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>3432074643</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>3661229510</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>3845320027</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>1740369997</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2418571784</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>3304304159</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>3625878969</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>3802265412</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>2786037133</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>3532806573</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>3729297687</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>3899627609</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>2674676797</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>3511236558</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>3680866765</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>3875639154</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>4020443344</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>2440526249</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>3313470676</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>3636121989</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>3823921337</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='w_mph' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='0.5'>
          <calculation class='tableau' formula='0.5' />
          <range max='1.0' min='0.0' />
        </column>
        <column caption='w_dist' datatype='real' name='[w_mph (copy)_1021261604058726402]' param-domain-type='range' role='measure' type='quantitative' value='0.5'>
          <calculation class='tableau' formula='0.5' />
          <range max='1.0' min='0.0' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.1tai5100m47xhm1256ob21yk4hv3'>
      <datasources>
        <datasource caption='lat_long' name='federated.1tai5100m47xhm1256ob21yk4hv3' />
      </datasources>
      <datasource-dependencies datasource='federated.1tai5100m47xhm1256ob21yk4hv3'>
        <column caption='is_run' datatype='boolean' name='[Calculation_6837519832723181568]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='[Activity Id (group)] = &apos;Runs&apos;' />
        </column>
        <column caption='Date' datatype='datetime' name='[date]' role='dimension' type='ordinal' />
        <column-instance column='[Calculation_6837519832723181568]' derivation='None' name='[none:Calculation_6837519832723181568:nk]' pivot='key' type='nominal' />
        <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.1tai5100m47xhm1256ob21yk4hv3].[none:Calculation_6837519832723181568:nk]'>
        <groupfilter function='member' level='[none:Calculation_6837519832723181568:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
      <filter class='quantitative' column='[federated.1tai5100m47xhm1256ob21yk4hv3].[none:date:qk]' included-values='in-range-or-null'>
        <min>#2018-07-01 15:01:42#</min>
        <max>#2021-01-09 11:58:45#</max>
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Filter1' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Pandemic Runs' type='sheet' worksheet='best' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='best,chart' />
        <param name='special-fields' value='all' />
        <param name='target' value='Pandemic Runs' />
      </command>
    </action>
    <action caption='Filter2' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Pandemic Runs' type='sheet' worksheet='chart' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='best,chart' />
        <param name='special-fields' value='all' />
        <param name='target' value='Pandemic Runs' />
      </command>
    </action>
    <action caption='Highlight1' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Pandemic Runs' type='sheet' worksheet='best' />
      <command command='tsc:brush'>
        <param name='exclude' value='best,map' />
        <param name='special-fields' value='all' />
        <param name='target' value='Pandemic Runs' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='best'>
      <table>
        <view>
          <datasources>
            <datasource caption='lat_long' name='federated.1tai5100m47xhm1256ob21yk4hv3' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='w_mph' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='0.5'>
              <calculation class='tableau' formula='0.5' />
              <range max='1.0' min='0.0' />
            </column>
            <column caption='w_dist' datatype='real' name='[w_mph (copy)_1021261604058726402]' param-domain-type='range' role='measure' type='quantitative' value='0.5'>
              <calculation class='tableau' formula='0.5' />
              <range max='1.0' min='0.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1tai5100m47xhm1256ob21yk4hv3'>
            <column datatype='string' name='[Activity Id (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[activity_id]' new-bin='true'>
                <bin default-name='false' value='&quot;Runs&quot;'>
                  <value>3176758153</value>
                  <value>3268638221</value>
                  <value>3291145648</value>
                  <value>3299714223</value>
                  <value>3304304159</value>
                  <value>3313470676</value>
                  <value>3338569587</value>
                  <value>3343034201</value>
                  <value>3351756619</value>
                  <value>3595387977</value>
                  <value>3610392158</value>
                  <value>3620653433</value>
                  <value>3625878969</value>
                  <value>3636121989</value>
                  <value>3649988553</value>
                  <value>3655753421</value>
                  <value>3661229510</value>
                  <value>3661351570</value>
                  <value>3666512435</value>
                  <value>3671441872</value>
                  <value>3680866765</value>
                  <value>3713886784</value>
                  <value>3718176242</value>
                  <value>3724247588</value>
                  <value>3729297687</value>
                  <value>3738649150</value>
                  <value>3746594320</value>
                  <value>3753168405</value>
                  <value>3772011540</value>
                  <value>3792565545</value>
                  <value>3802265412</value>
                  <value>3823921337</value>
                  <value>3830056771</value>
                  <value>3835736481</value>
                  <value>3840676463</value>
                  <value>3855420864</value>
                  <value>3860479596</value>
                  <value>3870518471</value>
                  <value>3875639154</value>
                  <value>3884922777</value>
                  <value>3894356190</value>
                  <value>3899366653</value>
                  <value>3899627609</value>
                  <value>3909168250</value>
                  <value>3928170027</value>
                  <value>3938086860</value>
                  <value>3951225990</value>
                  <value>3961073274</value>
                  <value>3970336366</value>
                  <value>3979061775</value>
                  <value>3998433153</value>
                  <value>4020443344</value>
                  <value>4036915665</value>
                  <value>4593777504</value>
                </bin>
              </calculation>
            </column>
            <column caption='composite' datatype='real' name='[Calculation_1021261604058820611]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Parameters].[w_mph (copy)_1021261604058726402]*[Calculation_6837519832782139398] + [Parameters].[Parameter 1]*[distance_if_run_scaled (copy)_6837519832782659592])&#10;        /&#10;([Parameters].[w_mph (copy)_1021261604058726402]+[Parameters].[Parameter 1])&#10;&#10;*100' />
            </column>
            <column caption='is_run' datatype='boolean' name='[Calculation_6837519832723181568]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Activity Id (group)] = &apos;Runs&apos;' />
            </column>
            <column caption='distance_if_run' datatype='real' name='[Calculation_6837519832781099011]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [Calculation_6837519832723181568]&#10;then [distance_miles]&#10;else null &#10;end' />
            </column>
            <column caption='distance_if_run_scaled' datatype='real' name='[Calculation_6837519832782139398]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Calculation_6837519832781099011] - [distance_if_run (copy)_6837519832781496324])&#10;/&#10;([distance_if_run (copy) (copy)_6837519832781967365] - [distance_if_run (copy)_6837519832781496324])' />
            </column>
            <column caption='Activity Id' datatype='integer' name='[activity_id]' role='dimension' type='ordinal' />
            <column caption='Date' datatype='datetime' name='[date]' role='dimension' type='ordinal' />
            <column caption='distance_if_run_max' datatype='real' name='[distance_if_run (copy) (copy)_6837519832781967365]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED :  max(if [Calculation_6837519832723181568]&#10;then [distance_miles]&#10;else null &#10;end)}' />
            </column>
            <column caption='distance_if_run_min' datatype='real' name='[distance_if_run (copy)_6837519832781496324]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED :  min(if [Calculation_6837519832723181568]&#10;then [distance_miles]&#10;else null &#10;end)}' />
            </column>
            <column caption='mph_if_run ' datatype='real' name='[distance_if_run (copy)_6837519832782659591]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [Calculation_6837519832723181568]&#10;then [mph]&#10;else null &#10;end' />
            </column>
            <column caption='mph_if_run_max' datatype='real' name='[distance_if_run_max (copy)_6837519832782659593]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED :  max(if [Calculation_6837519832723181568]&#10;then [mph]&#10;else null &#10;end)}' />
            </column>
            <column caption='mph_if_run_min' datatype='real' name='[distance_if_run_min (copy)_6837519832782659594]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED :  min(if [Calculation_6837519832723181568]&#10;then [mph]&#10;else null &#10;end)}' />
            </column>
            <column caption='mph_if_run_scaled ' datatype='real' name='[distance_if_run_scaled (copy)_6837519832782659592]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([distance_if_run (copy)_6837519832782659591] - [distance_if_run_min (copy)_6837519832782659594])&#10;/&#10;([distance_if_run_max (copy)_6837519832782659593] - [distance_if_run_min (copy)_6837519832782659594])' />
            </column>
            <column datatype='real' name='[distance_miles]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1021261604058820611]' derivation='Min' name='[min:Calculation_1021261604058820611:qk]' pivot='key' type='quantitative' />
            <column-instance column='[distance_miles]' derivation='Min' name='[min:distance_miles:qk]' pivot='key' type='quantitative' />
            <column-instance column='[mph]' derivation='Min' name='[min:mph:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[mph]' role='measure' type='quantitative' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_6837519832723181568]' derivation='None' name='[none:Calculation_6837519832723181568:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='None' name='[none:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1tai5100m47xhm1256ob21yk4hv3].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1tai5100m47xhm1256ob21yk4hv3].[min:distance_miles:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1tai5100m47xhm1256ob21yk4hv3].[min:mph:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1tai5100m47xhm1256ob21yk4hv3].[min:Calculation_1021261604058820611:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1tai5100m47xhm1256ob21yk4hv3].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1tai5100m47xhm1256ob21yk4hv3].[min:distance_miles:qk]&quot;</bucket>
              <bucket>&quot;[federated.1tai5100m47xhm1256ob21yk4hv3].[min:mph:qk]&quot;</bucket>
              <bucket>&quot;[federated.1tai5100m47xhm1256ob21yk4hv3].[min:distance_miles_scaled:qk]&quot;</bucket>
              <bucket>&quot;[federated.1tai5100m47xhm1256ob21yk4hv3].[min:mph_scaled:qk]&quot;</bucket>
              <bucket>&quot;[federated.1tai5100m47xhm1256ob21yk4hv3].[min:Calculation_1021261604058820611:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1tai5100m47xhm1256ob21yk4hv3].[tdy:date:ok]' direction='ASC' measure-to-sort-by='[federated.1tai5100m47xhm1256ob21yk4hv3].[min:Calculation_1021261604058820611:qk]' shelf='rows' />
            <shelf-sort-v2 dimension-to-sort='[federated.1tai5100m47xhm1256ob21yk4hv3].[none:date:ok]' direction='DESC' measure-to-sort-by='[federated.1tai5100m47xhm1256ob21yk4hv3].[min:Calculation_1021261604058820611:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1tai5100m47xhm1256ob21yk4hv3].[:Measure Names]</column>
            <column>[federated.1tai5100m47xhm1256ob21yk4hv3].[none:Calculation_6837519832723181568:nk]</column>
            <column>[federated.1tai5100m47xhm1256ob21yk4hv3].[none:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1tai5100m47xhm1256ob21yk4hv3].[:Measure Names]' value='114' />
            <format attr='text-format' field='[federated.1tai5100m47xhm1256ob21yk4hv3].[min:mph:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[federated.1tai5100m47xhm1256ob21yk4hv3].[min:distance_miles:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[federated.1tai5100m47xhm1256ob21yk4hv3].[min:Calculation_1021261604058820611:qk]' value='n#,##0;-#,##0' />
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1tai5100m47xhm1256ob21yk4hv3].[tdy:date:ok]' value='100' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1tai5100m47xhm1256ob21yk4hv3].[none:name:nk]' value='false' />
            <format attr='display' field='[federated.1tai5100m47xhm1256ob21yk4hv3].[none:date:ok]' value='false' />
            <format attr='text-format' field='[federated.1tai5100m47xhm1256ob21yk4hv3].[tdy:date:ok]' value='*mmm. d, yyyy' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[federated.1tai5100m47xhm1256ob21yk4hv3].[min:Calculation_1021261604058820611:qk]' />
              <tooltip column='[federated.1tai5100m47xhm1256ob21yk4hv3].[min:mph:qk]' />
              <tooltip column='[federated.1tai5100m47xhm1256ob21yk4hv3].[min:distance_miles:qk]' />
              <text column='[federated.1tai5100m47xhm1256ob21yk4hv3].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true'>&lt;[federated.1tai5100m47xhm1256ob21yk4hv3].[none:date:ok]&gt;</run>
                <run>Æ&#10;&#10;</run>
                <run fontcolor='#787878'>Distance:&#9;</run>
                <run bold='true'>&lt;[federated.1tai5100m47xhm1256ob21yk4hv3].[min:distance_miles:qk]&gt; miles</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Speed:&#9;</run>
                <run bold='true'>&lt;[federated.1tai5100m47xhm1256ob21yk4hv3].[min:mph:qk]&gt; mph</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Composite Score:&#9;</run>
                <run bold='true'>&lt;[federated.1tai5100m47xhm1256ob21yk4hv3].[min:Calculation_1021261604058820611:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1tai5100m47xhm1256ob21yk4hv3].[none:date:ok] / ([federated.1tai5100m47xhm1256ob21yk4hv3].[tdy:date:ok] / [federated.1tai5100m47xhm1256ob21yk4hv3].[none:name:nk]))</rows>
        <cols>[federated.1tai5100m47xhm1256ob21yk4hv3].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{6F13815D-333D-4193-8017-57E195FAC9AE}' />
    </worksheet>
    <worksheet name='chart'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='12'>Distance vs. Speed</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='lat_long' name='federated.1tai5100m47xhm1256ob21yk4hv3' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='w_mph' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='0.5'>
              <calculation class='tableau' formula='0.5' />
              <range max='1.0' min='0.0' />
            </column>
            <column caption='w_dist' datatype='real' name='[w_mph (copy)_1021261604058726402]' param-domain-type='range' role='measure' type='quantitative' value='0.5'>
              <calculation class='tableau' formula='0.5' />
              <range max='1.0' min='0.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1tai5100m47xhm1256ob21yk4hv3'>
            <column datatype='string' name='[Activity Id (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[activity_id]' new-bin='true'>
                <bin default-name='false' value='&quot;Runs&quot;'>
                  <value>3176758153</value>
                  <value>3268638221</value>
                  <value>3291145648</value>
                  <value>3299714223</value>
                  <value>3304304159</value>
                  <value>3313470676</value>
                  <value>3338569587</value>
                  <value>3343034201</value>
                  <value>3351756619</value>
                  <value>3595387977</value>
                  <value>3610392158</value>
                  <value>3620653433</value>
                  <value>3625878969</value>
                  <value>3636121989</value>
                  <value>3649988553</value>
                  <value>3655753421</value>
                  <value>3661229510</value>
                  <value>3661351570</value>
                  <value>3666512435</value>
                  <value>3671441872</value>
                  <value>3680866765</value>
                  <value>3713886784</value>
                  <value>3718176242</value>
                  <value>3724247588</value>
                  <value>3729297687</value>
                  <value>3738649150</value>
                  <value>3746594320</value>
                  <value>3753168405</value>
                  <value>3772011540</value>
                  <value>3792565545</value>
                  <value>3802265412</value>
                  <value>3823921337</value>
                  <value>3830056771</value>
                  <value>3835736481</value>
                  <value>3840676463</value>
                  <value>3855420864</value>
                  <value>3860479596</value>
                  <value>3870518471</value>
                  <value>3875639154</value>
                  <value>3884922777</value>
                  <value>3894356190</value>
                  <value>3899366653</value>
                  <value>3899627609</value>
                  <value>3909168250</value>
                  <value>3928170027</value>
                  <value>3938086860</value>
                  <value>3951225990</value>
                  <value>3961073274</value>
                  <value>3970336366</value>
                  <value>3979061775</value>
                  <value>3998433153</value>
                  <value>4020443344</value>
                  <value>4036915665</value>
                  <value>4593777504</value>
                </bin>
              </calculation>
            </column>
            <column caption='composite' datatype='real' name='[Calculation_1021261604058820611]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Parameters].[w_mph (copy)_1021261604058726402]*[Calculation_6837519832782139398] + [Parameters].[Parameter 1]*[distance_if_run_scaled (copy)_6837519832782659592])&#10;        /&#10;([Parameters].[w_mph (copy)_1021261604058726402]+[Parameters].[Parameter 1])&#10;&#10;*100' />
            </column>
            <column caption='is_run' datatype='boolean' name='[Calculation_6837519832723181568]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Activity Id (group)] = &apos;Runs&apos;' />
            </column>
            <column caption='distance_if_run' datatype='real' name='[Calculation_6837519832781099011]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [Calculation_6837519832723181568]&#10;then [distance_miles]&#10;else null &#10;end' />
            </column>
            <column caption='distance_if_run_scaled' datatype='real' name='[Calculation_6837519832782139398]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Calculation_6837519832781099011] - [distance_if_run (copy)_6837519832781496324])&#10;/&#10;([distance_if_run (copy) (copy)_6837519832781967365] - [distance_if_run (copy)_6837519832781496324])' />
            </column>
            <column caption='Activity Id' datatype='integer' name='[activity_id]' role='dimension' type='ordinal' />
            <column caption='Date' datatype='datetime' name='[date]' role='dimension' type='ordinal' />
            <column caption='distance_if_run_max' datatype='real' name='[distance_if_run (copy) (copy)_6837519832781967365]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED :  max(if [Calculation_6837519832723181568]&#10;then [distance_miles]&#10;else null &#10;end)}' />
            </column>
            <column caption='distance_if_run_min' datatype='real' name='[distance_if_run (copy)_6837519832781496324]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED :  min(if [Calculation_6837519832723181568]&#10;then [distance_miles]&#10;else null &#10;end)}' />
            </column>
            <column caption='mph_if_run ' datatype='real' name='[distance_if_run (copy)_6837519832782659591]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [Calculation_6837519832723181568]&#10;then [mph]&#10;else null &#10;end' />
            </column>
            <column caption='mph_if_run_max' datatype='real' name='[distance_if_run_max (copy)_6837519832782659593]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED :  max(if [Calculation_6837519832723181568]&#10;then [mph]&#10;else null &#10;end)}' />
            </column>
            <column caption='mph_if_run_min' datatype='real' name='[distance_if_run_min (copy)_6837519832782659594]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED :  min(if [Calculation_6837519832723181568]&#10;then [mph]&#10;else null &#10;end)}' />
            </column>
            <column caption='mph_if_run_scaled ' datatype='real' name='[distance_if_run_scaled (copy)_6837519832782659592]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([distance_if_run (copy)_6837519832782659591] - [distance_if_run_min (copy)_6837519832782659594])&#10;/&#10;([distance_if_run_max (copy)_6837519832782659593] - [distance_if_run_min (copy)_6837519832782659594])' />
            </column>
            <column datatype='real' name='[distance_miles]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1021261604058820611]' derivation='Min' name='[min:Calculation_1021261604058820611:qk]' pivot='key' type='quantitative' />
            <column-instance column='[distance_miles]' derivation='Min' name='[min:distance_miles:qk]' pivot='key' type='quantitative' />
            <column-instance column='[mph]' derivation='Min' name='[min:mph:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[mph]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_6837519832723181568]' derivation='None' name='[none:Calculation_6837519832723181568:nk]' pivot='key' type='nominal' />
            <column-instance column='[activity_id]' derivation='None' name='[none:activity_id:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.1tai5100m47xhm1256ob21yk4hv3].[none:Calculation_6837519832723181568:nk]</column>
            <column>[federated.1tai5100m47xhm1256ob21yk4hv3].[none:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1tai5100m47xhm1256ob21yk4hv3].[min:mph:qk]' field-type='quantitative' major-origin='0.0' major-show='false' major-spacing='1.0' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1tai5100m47xhm1256ob21yk4hv3].[min:mph:qk]' scope='rows' value='Speed' />
            <format attr='title' class='0' field='[federated.1tai5100m47xhm1256ob21yk4hv3].[min:distance_miles:qk]' scope='cols' value='Distance' />
            <format attr='height' field='[federated.1tai5100m47xhm1256ob21yk4hv3].[min:distance_miles:qk]' value='27' />
            <encoding attr='space' class='0' field='[federated.1tai5100m47xhm1256ob21yk4hv3].[min:distance_miles:qk]' field-type='quantitative' major-origin='0.0' major-show='false' major-spacing='1.0' scope='cols' type='space' />
            <format attr='width' field='[federated.1tai5100m47xhm1256ob21yk4hv3].[min:mph:qk]' value='28' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1tai5100m47xhm1256ob21yk4hv3].[min:Calculation_1021261604058820611:qk]' value='n#,##0;-#,##0' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1tai5100m47xhm1256ob21yk4hv3].[min:Calculation_1021261604058820611:qk]' value='n#,##0;-#,##0' />
            <format attr='text-format' field='[federated.1tai5100m47xhm1256ob21yk4hv3].[min:mph:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[federated.1tai5100m47xhm1256ob21yk4hv3].[min:distance_miles:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-size' value='8' />
            <format attr='font-family' value='Tableau Light' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1tai5100m47xhm1256ob21yk4hv3].[min:Calculation_1021261604058820611:qk]' value='Composite' />
          </style-rule>
        </style>
        <panes>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1tai5100m47xhm1256ob21yk4hv3].[min:Calculation_1021261604058820611:qk]' />
              <lod column='[federated.1tai5100m47xhm1256ob21yk4hv3].[none:activity_id:ok]' />
              <lod column='[federated.1tai5100m47xhm1256ob21yk4hv3].[none:date:ok]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true'>&lt;[federated.1tai5100m47xhm1256ob21yk4hv3].[none:date:ok]&gt;</run>
                <run>Æ&#10;&#10;</run>
                <run fontcolor='#787878'>Distance:&#9;</run>
                <run bold='true'>&lt;[federated.1tai5100m47xhm1256ob21yk4hv3].[min:distance_miles:qk]&gt; miles</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Speed:&#9;</run>
                <run bold='true'>&lt;[federated.1tai5100m47xhm1256ob21yk4hv3].[min:mph:qk]&gt; mph</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Composite Score:&#9;</run>
                <run bold='true'>&lt;[federated.1tai5100m47xhm1256ob21yk4hv3].[min:Calculation_1021261604058820611:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1tai5100m47xhm1256ob21yk4hv3].[min:mph:qk]</rows>
        <cols>[federated.1tai5100m47xhm1256ob21yk4hv3].[min:distance_miles:qk]</cols>
      </table>
      <simple-id uuid='{05DD5BDB-F53D-43C6-9580-2DA499B91E44}' />
    </worksheet>
    <worksheet name='map'>
      <table>
        <view>
          <datasources>
            <datasource caption='lat_long' name='federated.1tai5100m47xhm1256ob21yk4hv3' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='w_mph' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='0.5'>
              <calculation class='tableau' formula='0.5' />
              <range max='1.0' min='0.0' />
            </column>
            <column caption='w_dist' datatype='real' name='[w_mph (copy)_1021261604058726402]' param-domain-type='range' role='measure' type='quantitative' value='0.5'>
              <calculation class='tableau' formula='0.5' />
              <range max='1.0' min='0.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1tai5100m47xhm1256ob21yk4hv3'>
            <column datatype='string' name='[Activity Id (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[activity_id]' new-bin='true'>
                <bin default-name='false' value='&quot;Runs&quot;'>
                  <value>3176758153</value>
                  <value>3268638221</value>
                  <value>3291145648</value>
                  <value>3299714223</value>
                  <value>3304304159</value>
                  <value>3313470676</value>
                  <value>3338569587</value>
                  <value>3343034201</value>
                  <value>3351756619</value>
                  <value>3595387977</value>
                  <value>3610392158</value>
                  <value>3620653433</value>
                  <value>3625878969</value>
                  <value>3636121989</value>
                  <value>3649988553</value>
                  <value>3655753421</value>
                  <value>3661229510</value>
                  <value>3661351570</value>
                  <value>3666512435</value>
                  <value>3671441872</value>
                  <value>3680866765</value>
                  <value>3713886784</value>
                  <value>3718176242</value>
                  <value>3724247588</value>
                  <value>3729297687</value>
                  <value>3738649150</value>
                  <value>3746594320</value>
                  <value>3753168405</value>
                  <value>3772011540</value>
                  <value>3792565545</value>
                  <value>3802265412</value>
                  <value>3823921337</value>
                  <value>3830056771</value>
                  <value>3835736481</value>
                  <value>3840676463</value>
                  <value>3855420864</value>
                  <value>3860479596</value>
                  <value>3870518471</value>
                  <value>3875639154</value>
                  <value>3884922777</value>
                  <value>3894356190</value>
                  <value>3899366653</value>
                  <value>3899627609</value>
                  <value>3909168250</value>
                  <value>3928170027</value>
                  <value>3938086860</value>
                  <value>3951225990</value>
                  <value>3961073274</value>
                  <value>3970336366</value>
                  <value>3979061775</value>
                  <value>3998433153</value>
                  <value>4020443344</value>
                  <value>4036915665</value>
                  <value>4593777504</value>
                </bin>
              </calculation>
            </column>
            <column caption='composite' datatype='real' name='[Calculation_1021261604058820611]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Parameters].[w_mph (copy)_1021261604058726402]*[Calculation_6837519832782139398] + [Parameters].[Parameter 1]*[distance_if_run_scaled (copy)_6837519832782659592])&#10;        /&#10;([Parameters].[w_mph (copy)_1021261604058726402]+[Parameters].[Parameter 1])&#10;&#10;*100' />
            </column>
            <column caption='is_run' datatype='boolean' name='[Calculation_6837519832723181568]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Activity Id (group)] = &apos;Runs&apos;' />
            </column>
            <column caption='distance_if_run' datatype='real' name='[Calculation_6837519832781099011]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [Calculation_6837519832723181568]&#10;then [distance_miles]&#10;else null &#10;end' />
            </column>
            <column caption='distance_if_run_scaled' datatype='real' name='[Calculation_6837519832782139398]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Calculation_6837519832781099011] - [distance_if_run (copy)_6837519832781496324])&#10;/&#10;([distance_if_run (copy) (copy)_6837519832781967365] - [distance_if_run (copy)_6837519832781496324])' />
            </column>
            <column aggregation='Sum' caption='F11' datatype='integer' name='[F1]' role='dimension' type='ordinal' />
            <column caption='Activity Id' datatype='integer' name='[activity_id]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='Attribute' name='[attr:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[name]' derivation='Attribute' name='[attr:name:nk]' pivot='key' type='nominal' />
            <column caption='Date' datatype='datetime' name='[date]' role='dimension' type='ordinal' />
            <column caption='distance_if_run_max' datatype='real' name='[distance_if_run (copy) (copy)_6837519832781967365]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED :  max(if [Calculation_6837519832723181568]&#10;then [distance_miles]&#10;else null &#10;end)}' />
            </column>
            <column caption='distance_if_run_min' datatype='real' name='[distance_if_run (copy)_6837519832781496324]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED :  min(if [Calculation_6837519832723181568]&#10;then [distance_miles]&#10;else null &#10;end)}' />
            </column>
            <column caption='mph_if_run ' datatype='real' name='[distance_if_run (copy)_6837519832782659591]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [Calculation_6837519832723181568]&#10;then [mph]&#10;else null &#10;end' />
            </column>
            <column caption='mph_if_run_max' datatype='real' name='[distance_if_run_max (copy)_6837519832782659593]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED :  max(if [Calculation_6837519832723181568]&#10;then [mph]&#10;else null &#10;end)}' />
            </column>
            <column caption='mph_if_run_min' datatype='real' name='[distance_if_run_min (copy)_6837519832782659594]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED :  min(if [Calculation_6837519832723181568]&#10;then [mph]&#10;else null &#10;end)}' />
            </column>
            <column caption='mph_if_run_scaled ' datatype='real' name='[distance_if_run_scaled (copy)_6837519832782659592]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([distance_if_run (copy)_6837519832782659591] - [distance_if_run_min (copy)_6837519832782659594])&#10;/&#10;([distance_if_run_max (copy)_6837519832782659593] - [distance_if_run_min (copy)_6837519832782659594])' />
            </column>
            <column datatype='real' name='[distance_miles]' role='measure' type='quantitative' />
            <column aggregation='Avg' caption='Lat' datatype='real' name='[lat]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Lng' datatype='real' name='[lng]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[Calculation_1021261604058820611]' derivation='Min' name='[min:Calculation_1021261604058820611:qk]' pivot='key' type='quantitative' />
            <column-instance column='[distance_miles]' derivation='Min' name='[min:distance_miles:qk]' pivot='key' type='quantitative' />
            <column-instance column='[mph]' derivation='Min' name='[min:mph:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[mph]' role='measure' type='quantitative' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_6837519832723181568]' derivation='None' name='[none:Calculation_6837519832723181568:nk]' pivot='key' type='nominal' />
            <column-instance column='[F1]' derivation='None' name='[none:F1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[activity_id]' derivation='None' name='[none:activity_id:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[lat]' derivation='None' name='[none:lat:qk]' pivot='key' type='quantitative' />
            <column-instance column='[lng]' derivation='None' name='[none:lng:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1tai5100m47xhm1256ob21yk4hv3].[Action (Activity Id,Date)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[activity_id]' />
              <groupfilter function='level-members' level='[date]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1tai5100m47xhm1256ob21yk4hv3].[Action (Date,DAY(Date),Name)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[date]' />
              <groupfilter function='level-members' level='[tdy:date:ok]' />
              <groupfilter function='level-members' level='[name]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1tai5100m47xhm1256ob21yk4hv3].[none:Calculation_6837519832723181568:nk]</column>
            <column>[federated.1tai5100m47xhm1256ob21yk4hv3].[none:date:qk]</column>
            <column>[federated.1tai5100m47xhm1256ob21yk4hv3].[Action (Activity Id,Date)]</column>
            <column>[federated.1tai5100m47xhm1256ob21yk4hv3].[Action (Date,DAY(Date),Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1tai5100m47xhm1256ob21yk4hv3].[none:lng:qk]' field-type='quantitative' max='-7903321.7382992394' min='-7917917.5368504953' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1tai5100m47xhm1256ob21yk4hv3].[none:lat:qk]' field-type='quantitative' max='5221728.9079275634' min='5209034.4780166168' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='light' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Heatmap' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.1tai5100m47xhm1256ob21yk4hv3].[none:F1:ok]' />
              <tooltip column='[federated.1tai5100m47xhm1256ob21yk4hv3].[attr:date:ok]' />
              <tooltip column='[federated.1tai5100m47xhm1256ob21yk4hv3].[attr:name:nk]' />
              <tooltip column='[federated.1tai5100m47xhm1256ob21yk4hv3].[min:Calculation_1021261604058820611:qk]' />
              <tooltip column='[federated.1tai5100m47xhm1256ob21yk4hv3].[min:distance_miles:qk]' />
              <tooltip column='[federated.1tai5100m47xhm1256ob21yk4hv3].[min:mph:qk]' />
              <lod column='[federated.1tai5100m47xhm1256ob21yk4hv3].[none:activity_id:ok]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true'>&lt;[federated.1tai5100m47xhm1256ob21yk4hv3].[attr:date:ok]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Lat:&#9;</run>
                <run bold='true'>&lt;[federated.1tai5100m47xhm1256ob21yk4hv3].[none:lat:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Lng:&#9;</run>
                <run bold='true'>&lt;[federated.1tai5100m47xhm1256ob21yk4hv3].[none:lng:qk]&gt;</run>
                <run>Æ&#10;&#10;</run>
                <run fontcolor='#787878'>Distance:&#9;</run>
                <run bold='true'>&lt;[federated.1tai5100m47xhm1256ob21yk4hv3].[min:distance_miles:qk]&gt; miles</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Speed:&#9;</run>
                <run bold='true'>&lt;[federated.1tai5100m47xhm1256ob21yk4hv3].[min:mph:qk]&gt; mph</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Composite Score:&#9;</run>
                <run bold='true'>&lt;[federated.1tai5100m47xhm1256ob21yk4hv3].[min:Calculation_1021261604058820611:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.16392265260219574' />
                <format attr='density-intensity' value='0.029787063598632812' />
                <format attr='density-kernel-size' value='0.2738673985004425' />
                <format attr='mark-transparency' value='231' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1tai5100m47xhm1256ob21yk4hv3].[none:lat:qk]</rows>
        <cols>[federated.1tai5100m47xhm1256ob21yk4hv3].[none:lng:qk]</cols>
      </table>
      <simple-id uuid='{A9A35E91-9B4C-414D-B81F-A202AD97FD8A}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Pandemic Runs'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Pandemic Runs</run>
            <run>Æ&#10;</run>
            <run fontsize='12'>Activity tracking for 2020</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='800' maxwidth='1200' minheight='800' minwidth='1200' sizing-mode='fixed' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='w_mph' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='0.5'>
          <calculation class='tableau' formula='0.5' />
          <range max='1.0' min='0.0' />
        </column>
        <column caption='w_dist' datatype='real' name='[w_mph (copy)_1021261604058726402]' param-domain-type='range' role='measure' type='quantitative' value='0.5'>
          <calculation class='tableau' formula='0.5' />
          <range max='1.0' min='0.0' />
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='24' param='vert' type='layout-flow' w='98666' x='667' y='1000'>
            <zone fixed-size='63' h='7875' id='27' is-fixed='true' param='vert' type='layout-flow' w='98666' x='667' y='1000'>
              <zone fixed-size='88' h='7875' id='28' is-fixed='true' param='horz' type='layout-flow' w='98666' x='667' y='1000'>
                <zone fixed-size='731' h='7875' id='32' is-fixed='true' param='horz' type='layout-flow' w='98666' x='667' y='1000'>
                  <zone fixed-size='313' h='7875' id='25' is-fixed='true' type='title' w='26750' x='667' y='1000'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone fixed-size='457' forceUpdate='true' h='7875' id='36' is-fixed='true' type='text' w='38750' x='27417' y='1000'>
                    <formatted-text>
                      <run>Enter values for Distance and Speed to determine the importance when computing the composite score -  e.g. if Speed = 1 and Distance = 0, the fastest runs will be scored the highest.</run>
                    </formatted-text>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone custom-title='true' h='7875' id='11' mode='type_in' param='[Parameters].[w_mph (copy)_1021261604058726402]' type='paramctrl' w='16583' x='66167' y='1000'>
                    <formatted-text>
                      <run fontsize='8'>Distance Weight</run>
                    </formatted-text>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone custom-title='true' h='7875' id='12' mode='type_in' param='[Parameters].[Parameter 1]' type='paramctrl' w='16583' x='82750' y='1000'>
                    <formatted-text>
                      <run fontsize='8'>Speed Weight</run>
                    </formatted-text>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
            <zone h='90125' id='22' type='layout-basic' w='98666' x='667' y='8875'>
              <zone h='90125' id='3' param='vert' type='layout-flow' w='68666' x='667' y='8875'>
                <zone h='90125' id='6' name='map' show-title='false' w='68666' x='667' y='8875'>
                  <layout-cache minheight='2' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone h='90125' id='13' param='vert' type='layout-flow' w='30000' x='69333' y='8875'>
                <zone h='32750' id='26' param='vert' type='layout-flow' w='30000' x='69333' y='8875'>
                  <zone h='32750' id='33' name='chart' w='30000' x='69333' y='8875'>
                    <layout-cache minheight='164' type-h='scalable' type-w='fixed' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
                <zone fixed-size='451' h='57375' id='10' is-fixed='true' name='best' show-title='false' w='30000' x='69333' y='41625'>
                  <layout-cache type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='3000' id='34' name='chart' pane-specification-id='6' param='[federated.1tai5100m47xhm1256ob21yk4hv3].[min:Calculation_1021261604058820611:qk]' type='color' w='11667' x='87417' y='10375' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true'>Pandemic Runs</run>
                <run>Æ&#10;</run>
                <run fontsize='12'>Activity tracking for 2020</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1200' minheight='1200' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='40' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='39' param='vert' type='layout-flow' w='98666' x='667' y='1000'>
                <zone fixed-size='313' h='7875' id='25' type='title' w='26750' x='667' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='457' forceUpdate='true' h='7875' id='36' type='text' w='38750' x='27417' y='1000'>
                  <formatted-text>
                    <run>Enter values for Distance and Speed to determine the importance when computing the composite score -  e.g. if Speed = 1 and Distance = 0, the fastest runs will be scored the highest.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone custom-title='true' h='7875' id='11' mode='type_in' param='[Parameters].[w_mph (copy)_1021261604058726402]' type='paramctrl' w='16583' x='66167' y='1000'>
                  <formatted-text>
                    <run fontsize='8'>Distance Weight</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone custom-title='true' h='7875' id='12' mode='type_in' param='[Parameters].[Parameter 1]' type='paramctrl' w='16583' x='82750' y='1000'>
                  <formatted-text>
                    <run fontsize='8'>Speed Weight</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='90125' id='6' is-fixed='true' name='map' show-title='false' w='68666' x='667' y='8875'>
                  <layout-cache minheight='2' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='254' h='32750' id='33' is-fixed='true' name='chart' w='30000' x='69333' y='8875'>
                  <layout-cache minheight='164' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='3000' id='34' name='chart' pane-specification-id='6' param='[federated.1tai5100m47xhm1256ob21yk4hv3].[min:Calculation_1021261604058820611:qk]' type='color' w='11667' x='87417' y='10375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='57375' id='10' is-fixed='true' name='best' show-title='false' w='30000' x='69333' y='41625'>
                  <layout-cache type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{4702F8EE-51E6-4EA4-AF9E-605BC66B3E13}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{4F60DFCE-0EC3-48B5-8008-1DA083D6D37F}' />
    </window>
    <window class='worksheet' name='best'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[w_mph (copy)_1021261604058726402]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
      </viewpoint>
      <simple-id uuid='{5D45C916-BC02-4873-BE50-C861CD9BEFFD}' />
    </window>
    <window class='worksheet' name='chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='6' param='[federated.1tai5100m47xhm1256ob21yk4hv3].[min:Calculation_1021261604058820611:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{A695A0A1-A802-4624-9545-FFC39DBA19A6}' />
    </window>
    <window class='dashboard' maximized='true' name='Pandemic Runs'>
      <viewpoints>
        <viewpoint name='best'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='chart'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='map'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
      </viewpoints>
      <active id='10' />
      <simple-id uuid='{E5E84548-4577-47C4-A02B-011FB476FB28}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Pandemic Runs' width='384'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
